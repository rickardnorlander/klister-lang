import libc.so.6 int puts(cbc)
import libc.so.6 int putchar(int)
import libc.so.6 int getchar()
import libc.so.6 int atoi(cbc)
import libc.so.6 int write(int, cbb, int)
import libc.so.6 int fsync(int)

function writebytes(bytes) {
    write(1, bytes, bytes.len)
    fsync(1)
    return "Worked"
}

for (arg in argv) {
    puts(arg)
}

w`echo $[]{argv}`

puts(env["HOME"])

myputs = puts
# Comment a
myputs("Bye")  # Comment

if(?`false`.is_ok){
    puts("Never")
}
asdf="yes"
putchar(asdf[1])
puts(asdf)

might_fail = ?(`echo We " are " ${(1+1).to_string()}good $asdf`)
if (might_fail.is_ok) {
    was_fine = might_fail.ok_variant
    write(1, was_fine, was_fine.len)
}

`echo err 1>&2`

b=`echo hello world | tr a-z A-Z|tail -c 6`
puts(writebytes(b))

myarr = `find src -print0`.read0_strs()
len = myarr.len
ind = 0
while (ind < len) {
    puts(myarr[ind])
    ind = ind + 1
}

asdf=atoi("10")
while(0<asdf){
    puts("Looping")
    asdf=asdf-1 
}
if(asdf<-2){
    puts("less")
}else{
    puts("more")
}

puts((2+3*4).to_string())
puts(((2+3)*4).to_string())